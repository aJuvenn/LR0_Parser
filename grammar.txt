# Token List #

fun := fun
if := if
else := else
let := let
in := in
rec := rec
op := > | < | = | >= | <= 
int := \-?([0-9]+)
var := [a-zA-Z_]([a-zA-Z0-9_]*)
( := \(
) := \)
[ := \[
] := \]
; := ;
string := "(.*-")"
comments := #(.*-#)#

# Grammar Rules #

ILIST -> ILIST INSTR
ILIST -> INSTR

INSTR -> LET
INSTR -> EXPR
INSTR -> comments


LET -> let var EXPR ;
LET -> let rec var EXPR ;

EXPR -> var
EXPR -> int
EXPR -> string
EXPR -> FUN
EXPR -> CALL
EXPR -> LCALL
EXPR -> OPCALL
EXPR -> LOPCALL
EXPR -> IFELSE
EXPR -> LETIN

FUN -> fun ( VLIST ) EXPR
FUN -> fun [ VLIST ] EXPR

VLIST -> VLIST var
VLIST -> var

CALL -> ( ELIST )
LCALL -> [ ELIST ]
OPCALL -> ( op ELIST )
LOPCALL -> [ op ELIST ]

ELIST -> ELIST EXPR
ELIST -> EXPR

IFELSE -> if EXPR EXPR else EXPR

LETIN -> let var EXPR in EXPR